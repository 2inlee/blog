<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2022-06-09T22:11:41+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">시를 좋아하는 프로그래머</title><subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.</subtitle><author><name>AlphateamInho</name></author><entry><title type="html">문서편집기 vi</title><link href="http://localhost:4000/system/2022/06/09/%EB%AC%B8%EC%84%9C%ED%8E%B8%EC%A7%91%EA%B8%B0vi.html" rel="alternate" type="text/html" title="문서편집기 vi" /><published>2022-06-09T00:00:00+09:00</published><updated>2022-06-09T00:00:00+09:00</updated><id>http://localhost:4000/system/2022/06/09/%EB%AC%B8%EC%84%9C%ED%8E%B8%EC%A7%91%EA%B8%B0vi</id><content type="html" xml:base="http://localhost:4000/system/2022/06/09/%EB%AC%B8%EC%84%9C%ED%8E%B8%EC%A7%91%EA%B8%B0vi.html"><![CDATA[<h2 id="vi-편집기">vi 편집기</h2>
<blockquote>
  <p>vi 편집기는 일반적으로 모드가 나누어져 있기 때문에, 따로 공부를 하지 않으면 사용할 때 어려움이 있다.</p>
</blockquote>

<ul>
  <li>명령모드 : 모드변경,복사,이동등의 작업</li>
  <li>편집모드 : 문서작성 및 편집</li>
  <li>
    <p>Last Line 모드 : 치환, 저장 및 종료 수행</p>
  </li>
  <li>명령모드에서 <code class="language-plaintext highlighter-rouge">i</code>,<code class="language-plaintext highlighter-rouge">o</code>,<code class="language-plaintext highlighter-rouge">a</code> 를 입력하면 편집모드로 이동된다
    <blockquote>
      <p>i 는 커서의 앞부분 부터, a 는 커서의 다음부분 부터, o를 입력하면 커서의 아래라인부터 입력이 된다</p>
    </blockquote>
  </li>
  <li>명령모드에서 <code class="language-plaintext highlighter-rouge">:</code>를 입력하면 <code class="language-plaintext highlighter-rouge">Last Line 모드</code>로 넘어가게 된다</li>
  <li><code class="language-plaintext highlighter-rouge">Last Line 모드</code>에서 <code class="language-plaintext highlighter-rouge">:wq</code> 등의 명령어로 모드에서 나올 수 있다
    <blockquote>
      <p><code class="language-plaintext highlighter-rouge">:wq</code> 는 저장하고 나가기</p>
    </blockquote>
  </li>
</ul>

<h3 id="command-모드--가장-기본이-되는-모드-복사-붙여넣기-다른-모드로-전환-커서-이동-삭제-등">Command 모드 : 가장 기본이 되는 모드, 복사, 붙여넣기, 다른 모드로 전환, 커서 이동, 삭제 등</h3>

<p>(1) 커서 이동
<code class="language-plaintext highlighter-rouge">G</code> : 가장 마지막 줄로 이동 <br />
<code class="language-plaintext highlighter-rouge">gg</code> : 첫번째 줄로 이동 <br />
<code class="language-plaintext highlighter-rouge">[n]G</code> : n번째 줄로 이동  <br />
<code class="language-plaintext highlighter-rouge">$</code> : 커서가 위치한 줄의 맨 끝으로 이동   <br />
<code class="language-plaintext highlighter-rouge">O</code> : 커서가 위치한 줄의 맨 앞으로 이동   <br />
<code class="language-plaintext highlighter-rouge">w</code> : 커서가 한 단어씩 오른쪽으로 이동  <br />
<code class="language-plaintext highlighter-rouge">b</code> : 커서가 한 단어씩 왼쪽으로 이동</p>

<p>(2) 삭제
<code class="language-plaintext highlighter-rouge">x</code> : 한 문자 삭제,또는 Edit모드에서 백스페이스나 Delete키로 삭제 <br />
<code class="language-plaintext highlighter-rouge">dd</code> : 커서가 위치한 한 줄을 삭제 <br />
<code class="language-plaintext highlighter-rouge">d[커서이동]</code> : 커서가 이동하는 만큼 삭제</p>

<p>(3) : 수정
<code class="language-plaintext highlighter-rouge">r</code> : 커서가 위치한 부분의 문자 하나를 입력하는 문자로 대체 <br />
<code class="language-plaintext highlighter-rouge">u</code> : Ctrl + z 처럼 작업 취소</p>

<p>(4) : 복사 및 붙여넣기  <br />
<code class="language-plaintext highlighter-rouge">yy</code> : 커서가 위치한 한 줄을 복사 <br />
<code class="language-plaintext highlighter-rouge">y[커서이동]</code> : 커서 이동하는 만큼 복사</p>

<p><code class="language-plaintext highlighter-rouge">p</code> : 커서 밑이나 커서 다음에 붙여넣기</p>

<h3 id="edit-모드">Edit 모드</h3>
<ul>
  <li>실질적으로 문서를 편집하는 모드, 내용을 입력, 내용을 수정, 내용을 삭제  <br />
입력하고 싶은 내용을 입력하거나 백스페이스로 삭제</li>
</ul>

<h3 id="last-line-모드">Last Line 모드</h3>
<ul>
  <li>파일을 저장하거나, 종료하거나 저장하지 않고 그냥 종료, 검색,바꾸기 등</li>
</ul>

<p>(1) : 편집기 상태 변경  <br />
<code class="language-plaintext highlighter-rouge">:set nu</code> : 라인 넘버 표시  <br />
<code class="language-plaintext highlighter-rouge">:set nonu</code> : 라인 넘버 표시 안함   <br />
<code class="language-plaintext highlighter-rouge">:set ic</code> : 검색할 때 대소문자 무시   <br />
<code class="language-plaintext highlighter-rouge">:set noic</code> : 검색할 때 대소문자 구분</p>

<p>(2) : 검색 및 변환  <br />
<code class="language-plaintext highlighter-rouge">/[내용]</code> : 검색,<code class="language-plaintext highlighter-rouge">n</code> 다음검색,<code class="language-plaintext highlighter-rouge">N</code> 이전검색  <br />
<code class="language-plaintext highlighter-rouge">:%s/[찾을 내용]/[바꿀 내용]/g</code></p>

<p>(3) : 저장 및 종료  <br />
<code class="language-plaintext highlighter-rouge">:w</code> : 저장
<code class="language-plaintext highlighter-rouge">:q</code> : 종료 <br />
<code class="language-plaintext highlighter-rouge">:wq</code> : 저장 및 종료  <br />
<code class="language-plaintext highlighter-rouge">:w!</code> : 강제로 저장   <br />
<code class="language-plaintext highlighter-rouge">:q!</code> : 강제로 종료   <br />
<code class="language-plaintext highlighter-rouge">:wq!</code> : 저장 및 강제 종료</p>]]></content><author><name>Ino</name></author><category term="System" /><category term="vi" /><category term="vim" /><summary type="html"><![CDATA[vi 편집기 vi 편집기는 일반적으로 모드가 나누어져 있기 때문에, 따로 공부를 하지 않으면 사용할 때 어려움이 있다.]]></summary></entry><entry><title type="html">리눅스 기본구조와 명령어</title><link href="http://localhost:4000/system/2022/06/07/%EB%A6%AC%EB%88%85%EC%8A%A4-%EA%B8%B0%EB%B3%B8%ED%99%98%EA%B2%BD.html" rel="alternate" type="text/html" title="리눅스 기본구조와 명령어" /><published>2022-06-07T00:00:00+09:00</published><updated>2022-06-07T00:00:00+09:00</updated><id>http://localhost:4000/system/2022/06/07/%08%EB%A6%AC%EB%88%85%EC%8A%A4%20%EA%B8%B0%EB%B3%B8%ED%99%98%EA%B2%BD</id><content type="html" xml:base="http://localhost:4000/system/2022/06/07/%EB%A6%AC%EB%88%85%EC%8A%A4-%EA%B8%B0%EB%B3%B8%ED%99%98%EA%B2%BD.html"><![CDATA[<h2 id="리눅스-기본-환경">리눅스 기본 환경</h2>
<blockquote>
  <p>명령줄 인터페이스</p>
</blockquote>

<ul>
  <li>
    <p>텍스트 터미널을 통해 사용자의 컴퓨터가 상호 작용하는 방식을 뜻한다.</p>
  </li>
  <li>
    <p>즉, 작업 명령은 사용자가 컴퓨터 키보드 등을 통해 문자열의 형태로 입력하며 컴퓨터로부터의 출력 역시 문자열의 형태로 주어진다.</p>
  </li>
  <li>
    <p>명령어 구조 <br />
<code class="language-plaintext highlighter-rouge">명령어</code> : 시스템에서 특정 작업을 하기 위해 실행파일, 프로그램  <br />
<code class="language-plaintext highlighter-rouge">옵션</code> : 명령어를 어떻게 실행할 것인지 지정
일반적으로 대시(-) 문자 뒤에 옵션을 지정
<code class="language-plaintext highlighter-rouge">아규먼트(Argument)</code> :명령어에 의해서 영향을 받는 파일 or 디렉토리 등 특정 대상 <br />
ex) ls -al, ifconfig -a, netstat -anp</p>
  </li>
</ul>

<h2 id="디렉토리-관련-명령어">디렉토리 관련 명령어</h2>
<h3 id="먼저-디렉토리는-그냥-폴더이다">먼저 디렉토리는 그냥 폴더이다.</h3>
<ul>
  <li>pwd : 현재 작업 디렉토리 확인</li>
  <li>cd : 작업 디렉토리 변경 (change directory)</li>
  <li>ls : 디렉토리 내용 확인</li>
  <li>mkdir : 디렉토리 생성 (make directory)</li>
  <li>rmdir : 디렉토리 제거 (remove directory)</li>
  <li>mv : 디렉토리 이름 변경</li>
  <li>mv : 디렉토리 이동</li>
  <li>cp : 디렉토리 복사</li>
</ul>

<blockquote>
  <p>mv는 옵션에 따라 기능이 달라진다.</p>
</blockquote>

<ul>
  <li>ls [확인 할 디렉토리] : 디렉토리 내용 확인</li>
  <li>일반적으로 ls 명령어는 -al 옵션과 같이 사용한다</li>
  <li>
    <p>-a는 숨겨진 파일까지 모두 표시, -l은 좀 더 자세한 결과를 출력한다.</p>
  </li>
  <li>
    <p>mkdir [생성할 디렉토리 이름] : 지정한 이름으로 된 디렉토리를 생성 <br />
하위 구조도 함께 만들려면 -p옵션을 함께 사용</p>
  </li>
  <li>
    <p>rmdir [삭제할 디렉토리 이름] : 디렉토리를 삭제할 때 사용하는 명령어 내부에 특정 파일이나 디렉토리가 있으면 안에 파일을 삭제하고 삭제</p>
  </li>
  <li>
    <p>rm -r [삭제할 디렉토리 이름] : 파일을 삭제하는 rm명령어에 -r 옵션을 이용하여 디렉토리를 삭제할 수 있다.</p>
  </li>
  <li>cd [이동할 경로] : 작업 디렉토리를 다른 곳으로 변경할 때 사용</li>
</ul>

<h2 id="절대-경로--상대-경로">절대 경로 &amp; 상대 경로</h2>
<ul>
  <li>명령어를 사용할 때 경로를 입력하는 방식은 2가지가 있다.</li>
  <li>절대 경로 : 최상위 디렉토리인 /에서부터 특정 파일 또는 디렉토리의 경로를 모두 입력</li>
  <li>상대 경로 : 현재 작업 디렉토리를 기준으로 특정 파일 또는 디렉토리의 경로를 입력 <code class="language-plaintext highlighter-rouge">.</code>은 현재 디렉토리를 의미하고 <code class="language-plaintext highlighter-rouge">..</code>은 상위 디렉토리를 의미한다.
    <blockquote>
      <p>그래서 <code class="language-plaintext highlighter-rouge">cd ..</code> 이라는 명령어는 상위 폴더로 디렉토리를 이동해달라는 의미가 되는 것이다.  <br />
<code class="language-plaintext highlighter-rouge">cd /</code> 은 최상위 디렉토리로 이동해달라는건데, 그냥 <code class="language-plaintext highlighter-rouge">/</code>로 시작하면 절대경로가 되는데, 절대경로상 <code class="language-plaintext highlighter-rouge">/</code>는 가장 최상위 디렉토리라 그런것이다.</p>
    </blockquote>
  </li>
</ul>

<h2 id="파일-관련-명령어">파일 관련 명령어</h2>
<ul>
  <li>touch : 내용에 아무것도 없는 빈 파일을 생성</li>
  <li>
    <p>rm : 파일을 제거하는 명령어</p>
  </li>
  <li>
    <p>mv : 파일 이름 변경</p>
  </li>
  <li>
    <p>cp : 파일 복사</p>
  </li>
  <li>cat,head,tail,more  : 파일 내용 확인
    <blockquote>
      <p>전체적으로 디렉토리 명령어랑 겹치는 내용이 많다.</p>
    </blockquote>
  </li>
  <li>
    <p>touch [생성할 파일이름] : 생성할 파일이름 으로 비어있는 파일이 생성된다.</p>
  </li>
  <li>
    <p>rm, mv, cp 는 디렉토리 명령어랑 동일하게 사용한다.</p>
  </li>
  <li>
    <p>head는 옵션을 넣으면 위에서부터, tail은 아래서부터 보고 싶은 라인 수만큼 보여준다.</p>
  </li>
  <li>more 은 파일의 내용을 화면에 맞춰서 확인, space는 한 페이지씩 확인, enter는 한 줄 더 확인</li>
</ul>]]></content><author><name>Ino</name></author><category term="System" /><category term="linux" /><summary type="html"><![CDATA[리눅스 기본 환경 명령줄 인터페이스]]></summary></entry><entry><title type="html">깃과 깃허브</title><link href="http://localhost:4000/git/2022/05/31/Git%EC%97%90-%EB%8C%80%ED%95%B4%EC%84%9C.html" rel="alternate" type="text/html" title="깃과 깃허브" /><published>2022-05-31T00:00:00+09:00</published><updated>2022-05-31T00:00:00+09:00</updated><id>http://localhost:4000/git/2022/05/31/Git%EC%97%90%20%EB%8C%80%ED%95%B4%EC%84%9C</id><content type="html" xml:base="http://localhost:4000/git/2022/05/31/Git%EC%97%90-%EB%8C%80%ED%95%B4%EC%84%9C.html"><![CDATA[<h2 id="깃--버전관리시스템">깃 : 버전관리시스템</h2>
<blockquote>
  <p>VCS: version control system</p>
</blockquote>

<h2 id="깃허브">깃허브</h2>
<ul>
  <li>버전관리 깃의 원격 저장소 웹 호스팅 서비스</li>
  <li>소프트웨어 개발 활용 소셜 코딩 플랫폼</li>
  <li>전 세계 개발자를 위한 프로젝트 수행 협업 서비스</li>
  <li>프로젝트 개발 및 운영 서비스</li>
</ul>

<h2 id="깃허브를-쓰는-이유">깃허브를 쓰는 이유</h2>
<ul>
  <li>규모에 상관없이 모든 회사와 조직에서 원하는 공개 및 비공개 프로젝트에 필요한 중요 DevOps 기능을 제공하기 때문</li>
  <li>계획 수립 기능, 버그 수정, 변경 사항 관련 협업 등을 진행할 때 GitHub를 사용하면 전 세계 소프트웨어 개발자와 함께 작업 가능</li>
  <li>그리고 더 나은 제품을 만들 가능성 향상</li>
</ul>

<ol>
  <li>
    <p>Git은 프로젝트의 시간과 차원을 자유롭게 넘나들수 있도록 해준다.</p>
  </li>
  <li>
    <p>Git은 여러 사람들이 프로젝트에서 협업할 수 있도록 도와준다.</p>
  </li>
</ol>

<h2 id="깃허브의-주요기능">깃허브의 주요기능</h2>
<ul>
  <li>분기(branch)</li>
  <li>등록(Push)</li>
  <li>내려받기(Pull)</li>
</ul>

<h2 id="git-설치">git 설치</h2>
<blockquote>
  <p>mac기준으로 설명하겠다.</p>
</blockquote>

<ul>
  <li>
    <p>맥은 기본적으로 git이 설치되어 있다. 터미널에서 버전 확인 
<code class="language-plaintext highlighter-rouge">$git --version</code></p>
  </li>
  <li>
    <p>https://git-scm.com/ 에서 최신 버전 확인</p>
  </li>
</ul>

<h4 id="homebrew-설치">Homebrew 설치</h4>
<p>&lt; https://brew.sh/ &gt;</p>

<blockquote>
  <p>M1 또는 M2칩과 같은 SoC맥의 경우 Homebrew 가 동작하지 않는다면 아래르 추가로 실행해야 한다.</p>
  <blockquote>
    <ul>
      <li><code class="language-plaintext highlighter-rouge">whomai</code> 명렁어로 <code class="language-plaintext highlighter-rouge">사용자명</code> 확인</li>
    </ul>
  </blockquote>
</blockquote>

<blockquote>
  <blockquote>
    <ul>
      <li><code class="language-plaintext highlighter-rouge">echo 'eval "$(/opt/homebrew/bin/brew shellenv)"' &gt;&gt; /Users/사용자명/.zprofile</code></li>
      <li><code class="language-plaintext highlighter-rouge">eval "$(/opt/homebrew/bin/brew shellenv)"</code></li>
    </ul>
  </blockquote>
</blockquote>

<ul>
  <li>아래 명령어로 Git설치</li>
</ul>

<p><code class="language-plaintext highlighter-rouge">$ brew install git</code></p>
<blockquote>
  <ul>
    <li>터미널 재실행 후 <code class="language-plaintext highlighter-rouge">git --version </code>으로 확인</li>
  </ul>
</blockquote>

<h2 id="git-최초-설정">Git 최초 설정</h2>
<p>Git 전역으로 사용자 이름과 이메일 주소를 설정</p>
<blockquote>
  <p>github 계정과는 상관없음</p>
</blockquote>

<p><code class="language-plaintext highlighter-rouge">$git config --global user.name "(본인 이름)"</code><br />
<code class="language-plaintext highlighter-rouge">$git config --global user.email "(본인 이메일)"</code></p>

<p>아래 명령어들로 전역설정이 잘 되었는지 확인 <br />
<code class="language-plaintext highlighter-rouge">$git config --global user.name</code><br />
<code class="language-plaintext highlighter-rouge">$git config --global user.email</code></p>

<p>기본 브랜치명 변경<br />
기존 : <code class="language-plaintext highlighter-rouge">master</code> <br />
변경후 : <code class="language-plaintext highlighter-rouge">main</code>     <br />
<code class="language-plaintext highlighter-rouge">$ git config --global init.defaultBranch main</code></p>

<h2 id="프로젝트-생성--git-관리-시작">프로젝트 생성 &amp; Git 관리 시작</h2>

<p>vscode 내에서 git을 사용할 폴더 내부에서</p>
<blockquote>
  <p>현재 어느 폴더에 있는지 모르겠으면 터미널창에 <code class="language-plaintext highlighter-rouge">$ pwd</code> 로 원하는 폴더가 잘 선택되어있는지 확인한다</p>
</blockquote>

<p>폴더에 숨김모드로 .git 폴더가 생성되었는 지 확인한다.</p>
<ul>
  <li>이 폴더를 지우면 Git 관리 내역이 삭제된다.
    <blockquote>
      <p>맥에서 숨김파일 보기 : <code class="language-plaintext highlighter-rouge">command</code> + <code class="language-plaintext highlighter-rouge">shift</code> + <code class="language-plaintext highlighter-rouge">.</code></p>
    </blockquote>
  </li>
</ul>

<p>여기까지 잘 따라왔다면, 기본적인 Git 설정은 끝났다고 볼 수 있다.</p>]]></content><author><name>Ino</name></author><category term="git" /><category term="git" /><summary type="html"><![CDATA[깃 : 버전관리시스템 VCS: version control system]]></summary></entry><entry><title type="html">서버에 대해서</title><link href="http://localhost:4000/web/2022/05/30/Server%EC%97%90-%EB%8C%80%ED%95%B4%EC%84%9C.html" rel="alternate" type="text/html" title="서버에 대해서" /><published>2022-05-30T00:00:00+09:00</published><updated>2022-05-30T00:00:00+09:00</updated><id>http://localhost:4000/web/2022/05/30/Server%EC%97%90%20%EB%8C%80%ED%95%B4%EC%84%9C</id><content type="html" xml:base="http://localhost:4000/web/2022/05/30/Server%EC%97%90-%EB%8C%80%ED%95%B4%EC%84%9C.html"><![CDATA[<h2 id="1서버가-뭔데">1.서버가 뭔데?</h2>
<p>국밥집 이모다.<br />
우리가 순댓국집 가서 “이모~ 국밥하나 갖다주세요 “ 하면 이모가 국밥하나 갖다준다.<br />
서버도 똑같다.<br />
국밥집이모나 서버나 우리가 요청한걸 갖다주는 것 뿐이다. 
즉, 서버는 요청을 받으면 요청한 내용을 보내주는 프로그램인데,
HTTP요청에는 크게 4가지가 있는데, 읽기 쓰기 수정 삭제이다.</p>
<hr />

<h2 id="2읽기-get">2.읽기 (GET)</h2>
<p>특정 페이지를 get하면, 특정페이지를 서버에서 보내주는 형식이다.
우리가 네이버에서 네이버웹툰,네이버메일등에 들어가는 버튼을 누르면 지정사이트로 이동하는 것들이 모두 GET요청 하는 것이다.</p>

<h2 id="3쓰기-post">3.쓰기 (POST)</h2>
<p>댓글을 작성하거나, 글을 쓸 때 우리가 게시하는 것들을 받아들이는 것을 post요청이라고 한다.</p>

<h2 id="4수정-put">4.수정 (PUT)</h2>
<p>뭔가를 수정할 때</p>
<h2 id="5삭제-delete">5.삭제 (DELETE)</h2>
<p>뭔가를 삭제할 때</p>]]></content><author><name>Ino</name></author><category term="web" /><category term="web" /><category term="javascript" /><summary type="html"><![CDATA[1.서버가 뭔데? 국밥집 이모다. 우리가 순댓국집 가서 “이모~ 국밥하나 갖다주세요 “ 하면 이모가 국밥하나 갖다준다. 서버도 똑같다. 국밥집이모나 서버나 우리가 요청한걸 갖다주는 것 뿐이다. 즉, 서버는 요청을 받으면 요청한 내용을 보내주는 프로그램인데, HTTP요청에는 크게 4가지가 있는데, 읽기 쓰기 수정 삭제이다.]]></summary></entry><entry><title type="html">자바스크립트에 대해서</title><link href="http://localhost:4000/web/2022/05/29/Javascrpt%EC%97%90-%EB%8C%80%ED%95%B4%EC%84%9C.html" rel="alternate" type="text/html" title="자바스크립트에 대해서" /><published>2022-05-29T00:00:00+09:00</published><updated>2022-05-29T00:00:00+09:00</updated><id>http://localhost:4000/web/2022/05/29/Javascrpt%EC%97%90%20%EB%8C%80%ED%95%B4%EC%84%9C</id><content type="html" xml:base="http://localhost:4000/web/2022/05/29/Javascrpt%EC%97%90-%EB%8C%80%ED%95%B4%EC%84%9C.html"><![CDATA[<h2 id="1자바스크립트의-특징">1.자바스크립트의 특징</h2>
<p>자바스크립트는 HTML, CSS와 함께 웹을 구성하는 요소 중 하나로 웹 브라우저에서 동작하는 유일한 프로그래밍 언어이다.
(Vue,React,Angular 등도 javascript기반으로 만들어진 프레임워크이다.)</p>
<blockquote>
  <p>~python기반의 pyscript도 javascript 기반이다.~
자바스크립트는 기존의 프로그래밍 언어에서 많은 영향을 받았다.
기본 문법은 C, Java와 유사하고 Self에서는 프로토타입 기반 상속을, Scheme에서는 일급 함수의 개념을 차용했다.
~ 그래서 매우 근본이 없다.. 필요해서 막 만들었다는게 학계의 정설이다 ~  <br />
자바스크립트는 개발자가 별도의 컴파일 작업을 수행하지 않는 인터프리터 언어(Interpreter language)이다.</p>
</blockquote>

<blockquote>
  <p>그리고 여러 논란이 있지만(?) 자바스크립트는 프토로타입 기반의 객체지향 언어이다.</p>
</blockquote>

<h2 id="2자바스크립트의-실행환경">2.자바스크립트의 실행환경</h2>
<p>모든 브라우저는 자바스크립트를 해석하고 실행할 수 있는 자바스크립트 엔진을 내장하고 있다. 브라우저뿐만 아니라 Node.js도 자바스크립트 엔진을 내장하고 있다. 따라서 자바스크립트는 브라우저와 Node.js 환경에서 실행할 수 있다. 기본적으로 브라우저에서 동작하는 코드는 Node.js 환경에서도 동작한다.</p>

<p>그런데 브라우저와 Node.js는 존재 목적이 다르다. 브라우저는 HTML, CSS, 자바스크립트를 실행하여 웹 페이지를 화면에 렌더링하는 것이 주된 목적이지만, Node.js는 서버 개발 환경을 제공하는 것이 주된 목적이다.</p>

<p>예를 들어 브라우저는 HTML 요소를 선택하거나 조작하는 기능들의 집합인 DOM API를 기본적으로 제공한다. 하지만 서버 개발 환경을 제공하는 것이 주 목적인 Node.js는 클라이언트 사이드 Web API인 DOM API를 제공하지 않는다. 서버에서는 HTML 요소를 다룰 일이 없기 때문이다. 반대로 Node.js에서는 파일을 생성하고 수정할 수 있는 File 시스템을 기본 제공하지만 브라우저는 이를 지원하지 않는다.</p>]]></content><author><name>Ino</name></author><category term="web" /><category term="web" /><category term="javascript" /><summary type="html"><![CDATA[1.자바스크립트의 특징 자바스크립트는 HTML, CSS와 함께 웹을 구성하는 요소 중 하나로 웹 브라우저에서 동작하는 유일한 프로그래밍 언어이다. (Vue,React,Angular 등도 javascript기반으로 만들어진 프레임워크이다.) ~python기반의 pyscript도 javascript 기반이다.~ 자바스크립트는 기존의 프로그래밍 언어에서 많은 영향을 받았다. 기본 문법은 C, Java와 유사하고 Self에서는 프로토타입 기반 상속을, Scheme에서는 일급 함수의 개념을 차용했다. ~ 그래서 매우 근본이 없다.. 필요해서 막 만들었다는게 학계의 정설이다 ~ 자바스크립트는 개발자가 별도의 컴파일 작업을 수행하지 않는 인터프리터 언어(Interpreter language)이다.]]></summary></entry><entry><title type="html">프로그래밍이란?</title><link href="http://localhost:4000/web/2022/05/28/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D%EC%97%90-%EB%8C%80%ED%95%B4%EC%84%9C.html" rel="alternate" type="text/html" title="프로그래밍이란?" /><published>2022-05-28T00:00:00+09:00</published><updated>2022-05-28T00:00:00+09:00</updated><id>http://localhost:4000/web/2022/05/28/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D%EC%97%90%20%EB%8C%80%ED%95%B4%EC%84%9C</id><content type="html" xml:base="http://localhost:4000/web/2022/05/28/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D%EC%97%90-%EB%8C%80%ED%95%B4%EC%84%9C.html"><![CDATA[<h2 id="1본격적으로-js자바스크립트를-설명하기전에-프로그래밍이란-">1.본격적으로 JS(자바스크립트)를 설명하기전에, 프로그래밍이란 ?</h2>
<blockquote>
  <p>앞서 설명했던 html과 css와는 다르게 JS(자바스크린트를 편의상 JS라고 하겠다.) 는 프로그래밍언어이기 때문에 프로그래밍에 대해서 간략하게 설명하고 넘어가겠다.</p>
</blockquote>

<p><code class="language-plaintext highlighter-rouge">프로그래밍</code> 이란 컴퓨터에게 실행을 요구하는 일종의 커뮤니케이션이다. <br />
이를 위해서 무엇을 원하고 어떤식으로 컴퓨터에게 명령을 전달하는 지를 알아야한다.  <br />
다시 말해, 프로그래밍에 앞서 문제(요구사항)를 명확히 이해한 후 적절한 문제 해결 방안의 정의가 필요하다.
컴퓨터는 0과 1밖에 알지못하기 때문에 우리가 원하는 요구사항을 컴퓨터가 알아들을 수 있게 정확하고 상세하게 코드로 풀어서 쓰는 것을  <code class="language-plaintext highlighter-rouge">프로그래밍</code> 이라고한다. <br />
우리는 문제해결을 위해서 컴퓨터를 이용하기때문에 문제 해결 방안을 고려할때 컴퓨터의 입장에서 문제를 바라봐야 하는데 이때 필요한것이 컴퓨터적사고 (Computational thinking)이다.</p>

<hr />
<h2 id="2프로그래밍언어">2.프로그래밍언어</h2>
<p>컴퓨터는 인간이 이해할 수 있는 언어(자연어)가 아니라 기계가 이해할 수 있는 언어(기계어)로 명령을 전달해야 하는데, 
직접 기계어로 전달하는 것을 대신할 가장 유용한 대안은 인간이 이해할 수 있는 약속된 구문(Syntax)으로 구성된 <code class="language-plaintext highlighter-rouge">프로그래밍 언어(Programming Language)</code>를 사용하여 프로그램을 작성한 후, 그것을 컴퓨터가 이해할 수 있는 기계어로 변환하여 주는 일종의 번역기를 이용하는 것이다. 이 일종의 번역기를 <code class="language-plaintext highlighter-rouge">컴파일러(compiler)</code> 혹은 <code class="language-plaintext highlighter-rouge">인터프리터(interpreter)</code>라고 한다.
프로그래밍 학습은 일반적으로 프로그래밍 언어의 문법을 배우는 것부터 시작한다. 
이는 외국어 학습과 유사하다고 할 수 있다. 
외국어를 잘하려면 외국어 화자의 말이나 문장을 정확히 이해한 후, 문맥에 따른 적절한 어휘 선택, 그리고 순차적으로 결론을 향해 나아가는 문장 구성이 필요하다. 즉, 문법에 맞는 문장을 구성하는 것은 물론 의미(Semantics)를 가지고 있어야 언어의 역할을 충실히 수행할 수 있다.</p>
<hr />

<h2 id="3기본-개념과-동작-원리-이해의-중요성">3.기본 개념과 동작 원리 이해의 중요성</h2>
<p>프로그래머가 해야 할 일은 문제를 해결하기 위한 방안을 고안하고 이것을 문법에 맞게 코드로 구현하는 것이다. <br />
구현된 코드는 의도한 대로 정확히 동작하여 문제를 해결해야 한다.
이때 자신이 구현한 코드가 컴퓨터 내부에서 어떻게 동작할 것인지 그리고 무엇을 돌려 줄 것인지 예측 가능해야 한다. 
이를 위해서는 프로그래밍 언어의 기본 개념과 동작 원리를 정확히 이해하는 것이 중요하다.<br />
기본 개념과 동작 원리를 이해하지 못한 상태에서 Copy &amp; Paste로 단순히 동작만 하는 코드를 만들고 그것에 만족한다면 여러분이 구현한 코드는 신뢰할 수 없고 유지하고 보수하기 까다로운 코드가 될 것이다.
그리고 문제 해결 능력은 어느 선에서 성장을 멈추고 말 것이다.  <br />
동작 원리의 이해는 코드의 동작을 예측할 수 있게 돕는다.
또한 에러를 발생시키는 코드를 만나면 에러가 발생하는 원인을 이해해야 디버깅이 가능하다.
이를 위해 코드의 동작을 예측할 수 있는 능력은 필수 불가결적 요소이다.</p>]]></content><author><name>Ino</name></author><category term="web" /><category term="web" /><category term="javascript" /><summary type="html"><![CDATA[1.본격적으로 JS(자바스크립트)를 설명하기전에, 프로그래밍이란 ? 앞서 설명했던 html과 css와는 다르게 JS(자바스크린트를 편의상 JS라고 하겠다.) 는 프로그래밍언어이기 때문에 프로그래밍에 대해서 간략하게 설명하고 넘어가겠다.]]></summary></entry><entry><title type="html">시맨틱 웹(Semantic Web)</title><link href="http://localhost:4000/web/2022/05/26/%EC%8B%9C%EB%A7%A8%ED%8B%B1%EC%9A%94%EC%86%8C%EC%99%80-%EC%9B%B9.html" rel="alternate" type="text/html" title="시맨틱 웹(Semantic Web)" /><published>2022-05-26T00:00:00+09:00</published><updated>2022-05-26T00:00:00+09:00</updated><id>http://localhost:4000/web/2022/05/26/%EC%8B%9C%EB%A7%A8%ED%8B%B1%EC%9A%94%EC%86%8C%EC%99%80%20%EC%9B%B9</id><content type="html" xml:base="http://localhost:4000/web/2022/05/26/%EC%8B%9C%EB%A7%A8%ED%8B%B1%EC%9A%94%EC%86%8C%EC%99%80-%EC%9B%B9.html"><![CDATA[<h2 id="시맨틱-웹이-뭔데">시맨틱 웹이 뭔데?</h2>
<blockquote>
  <p><em>시멘틱 웹에 관한부분은 PoiemaWeb (웹프로그래밍튜토리얼) 사이트 참조</em></p>
</blockquote>

<p>2022년 퍼블리싱 되고 있는 웹사이트의 갯수는 약20억개, 인터넷사용자수는 53만명이다.</p>
<blockquote>
  <p><em>출처 : https://www.internetlivestats.com/</em></p>
</blockquote>

<p>대부분의 인터넷 사용자는 원하는 정보를 취득하기 위해 Google이나 Naver와 같은 검색사이트를 이용한다. <br />
웹사이트는 검색엔진에 의한 노출이 매우 중요하다. <br />
당연한 것이 검색엔진에 노출되지 않는 웹사이트에는 접속하는 이도 없기 때문이다. <br />
검색엔진은 이 시대의 가장 강력한 권력 중의 하나라고 말할 수도 있겠다.</p>

<p>SEO(검색엔진 최적화: Search Engine Optimization)같은 마케팅 도구를 사용하여 검색엔진이 본인의 웹사이트를 검색하기 알맞은 구조로 웹사이트를 조정하기도 하는데, 이것은 기본적으로 검색엔진이 웹사이트 정보를 어떻게 수집하는지 아는 것으로 부터 시작된다.</p>

<p>검색엔진은 로봇(Robot)이라는 프로그램을 이용해 매일 전세계의 웹사이트 정보를 수집한다.(이것을 크롤링이라 하며 검색엔진의 크롤러가 이를 수행한다.) <br />
그리고 검색 사이트 이용자가 검색할 만한 키워드를 미리 예상하여 검색 키워드에 대응하는 인덱스(색인)을 만들어 둔다.(이것을 인덱싱이라 하며 검색엔진의 인덱서가 이를 수행한다.)</p>

<hr />

<p>인덱스를 생성할 때 사용되는 정보는 검색 로봇이 수집한 정보인데 결국 웹사이트의 HTML 코드이다. <br />
즉, 검색 엔진은 HTML 코드 만으로 그 의미를 인지하여야 하는데 이때 시맨틱 요소(Semantic element)를 해석하게 된다.</p>
<blockquote>
  <p><em>여담으로, python에서 Beautiful Soup 라이브러리를 이용하면 직접 웹크롤링/스크래핑을 할 수 있다.</em></p>
</blockquote>

<p>HTML으로 작성된 문서는 컴퓨터가 해석할 수 있는 메타데이터와 사람이 사용하는 자연어 문장이 뒤섞여 있다. <br />
아래 코드를 보면 1행과 2행은 브라우저에서 동일한 외형을 갖는다. 이는 h1 태그의 디폴트 스타일이 1행과 같기 때문이다.</p>
<blockquote>
  <p>b태그는 bold의 약자로 boid체(두꺼운글씨체)이다.</p>
</blockquote>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;font</span> <span class="na">size=</span><span class="s">"6"</span><span class="nt">&gt;&lt;b&gt;</span>Hello<span class="nt">&lt;/b&gt;&lt;/font&gt;</span>
<span class="nt">&lt;h1&gt;</span>Hello<span class="nt">&lt;/h1&gt;</span>
</code></pre></div></div>

<p><img src="https://user-images.githubusercontent.com/95608811/169962379-1c21cd6f-9b7f-4eee-a887-a5c82a6455ba.png" width="600px" /></p>

<p>그러나 1행의 요소는 의미론적으로 어떤 의미도 가지고 있지 않다.<br />
즉, 의도가 명확하지 않다. 
개발자가 의도한 요소의 의미를 명확하게 나타내지 않고 다만 폰트 크기와 볼드체를 지정하는 메타데이터만을 브라우저에게 알리고 있다.<br />
그러나 2행의 요소는 header(제목) 중 가장 상위 레벨이라는 의미를 내포하고 있어서 개발자가 의도한 요소의 의미가 명확히 드러나고 있다. 
이것은 코드의 가독성을 높이고 유지보수를 쉽게한다.</p>

<p><strong>검색엔진은 대체로 h1 요소 내의 콘텐츠를 웹문서의 중요한 제목으로 인식하고 인덱스에 포함시킬 확률이 높다.또한 사람도 h1 요소 내의 콘텐츠가 제목임을 인식할 수 있다.</strong></p>

<p>시맨틱 요소로 구성되어 있는 웹페이지는 검색엔진에 보다 의미론적으로 문서 정보를 전달할 수 있고 검색엔진 또한 시맨틱 요소를 이용하여 보다 효과적인 크롤링과 인덱싱이 가능해졌다. 
즉, 시맨틱 태그란 브라우저, 검색엔진, 개발자 모두에게 콘텐츠의 의미를 명확히 설명하는 역할을 한다.<br />
시맨틱 태그에 의해 컴퓨터가 HTML 요소의 의미를 보다 명확히 해석하고 그 데이터를 활용할 수 있는 시맨틱 웹이 실현될 수 있다.</p>

<p>시맨틱 웹이란 웹에 존재하는 수많은 웹페이지들에 메타데이터(Metadata)를 부여하여,<br />
기존의 잡다한 데이터 집합이었던 웹페이지를 ‘의미’와 ‘관련성’을 가지는 거대한 데이터베이스로 구축하고자 하는 발상이다.</p>

<p>HTML 요소는 non-semantic 요소, semantic 요소로 구분할 수 있다.</p>

<blockquote>
  <p>non-semantic 요소</p>
</blockquote>

<p>div, span 등이 있으며 이들 태그는 content에 대하여 어떤 설명도 하지 않는다.</p>

<blockquote>
  <p>semantic 요소</p>
</blockquote>

<p>form, table, img 등이 있으며 이들 태그는 content의 의미를 명확히 설명한다,</p>

<p>간략히하자면, 웹페이지가 검색노출이 잘되게끔 하고싶다면,단순히 디자인적인 부분만을 고려하여 태그를 사용하는게 아닌 중요한 내용과 그렇지 않은 내용들을 semantic 요소를 고려하여 태그를 작성하면 된다 !</p>]]></content><author><name>Ino</name></author><category term="web" /><category term="web" /><category term="html" /><summary type="html"><![CDATA[시맨틱 웹이 뭔데? 시멘틱 웹에 관한부분은 PoiemaWeb (웹프로그래밍튜토리얼) 사이트 참조]]></summary></entry><entry><title type="html">CSS에 대해서</title><link href="http://localhost:4000/web/2022/05/25/CSS%EC%97%90-%EB%8C%80%ED%95%B4%EC%84%9C.html" rel="alternate" type="text/html" title="CSS에 대해서" /><published>2022-05-25T00:00:00+09:00</published><updated>2022-05-25T00:00:00+09:00</updated><id>http://localhost:4000/web/2022/05/25/CSS%EC%97%90%20%EB%8C%80%ED%95%B4%EC%84%9C</id><content type="html" xml:base="http://localhost:4000/web/2022/05/25/CSS%EC%97%90-%EB%8C%80%ED%95%B4%EC%84%9C.html"><![CDATA[<h2 id="css가-뭔데">CSS가 뭔데?</h2>
<p>CSS(Cascading Style Sheets)는 HTML이나 XML과 같은 구조화 된 문서(Document)를 화면, 종이 등에 어떻게 렌더링할 것인지를 정의하기 위한 언어이다. 즉, CSS는 HTML의 각 요소(Element)의 style(design, layout etc)을 정의하여 화면(Screen) 등에 어떻게 렌더링하면 되는지 브라우저에게 설명하기 위한 언어이다.</p>

<blockquote>
  <p><del>그냥 웹페이지에서 HTML 로 만들어둔 웹 구조 위에 스타일을 입히는 작업이다.</del></p>
</blockquote>

<p>프론트엔드 개발자를 희망하면서, CSS는 배우기를 꺼려하는 초보개발자들이 종종 보인다.<br />
CSS는 HTML이라는 구조에 단순히 색을 입히고, 폰트색만을 조절하는 것이 전부가 아니라, Javascript만으로는 구현하기 힘든 애니메이션이나 효과등을 넣을때 효과적으로 사용할 수 있기 때문에, Javascript나 파생라이브러리 (Vue.js,React.vs,Angular.js)를 배우기전에 초급자이상은 넘고 가는 것을 추천하다.</p>

<hr />

<h2 id="bootstrap">BootStrap</h2>
<p>CSS를 기피하는 개발자들을 위해서 빠르고 간편한 반응형 웹디자인을 위해 Bootstrap 에서는 Open-source<br />
라이브러리를 제공하는데,<br />
HTML, CSS, JavaScript로 만들어진 typography, 입력 양식(forms), 버튼, 테이블, 탭, 내비게이션, 모달, 이미지 캐러셀(image carousel) 등을 제공하며 추가적으로 JavaScript plugin들을 제공한다<br />
처음 CSS 공부하는 개발자라면 Bootstrap은 지양하고 CSS를 어느정도 이상 공부하고 
Bootstrap을 사용하는것을 추천한다.
그래도, 당장 빠르게 결과물을 내야 한다면 사용법 정도는 알고서 바로 적용하자.</p>
<blockquote>
  <p>Bootstrap 홈페이지링크<br />
https://getbootstrap.com/</p>
</blockquote>

<hr />

<h3 id="bootstrap의-장점">BootStrap의 장점</h3>

<p>Easy to use <br />
HTML과 CSS에 대한 기본 지식이 있다면 쉽게 사용할 수 있다.</p>

<p>Responsive features  <br />
스마트폰, 테블릿, 데스크탑에 적합한 responsive CSS를 제공한다.</p>

<p>Mobile-first approach  <br />
Bootstrap 3부터 mobile-first style을 기본으로 지원한다.</p>

<p>Browser compatibility  <br />
대부분의 브라우저(Chrome, Firefox, Internet Explorer, Safari, Opera)를 지원한다.</p>

<p>Framework</p>

<p>웹사이트 디자인에는 정형화된 코드가 자주 사용되는데 이를 별도로 저장해 두었다가 필요할 때마다 복사하여 사용하곤 한다.(Snippet 이라고한다) 그러나 스니핏이 개발팀 내 공유되어 관리되지 못하고 개인별로 사용하다보면 전체 코드는 일관된 스타일을 가지지 못하여 품질면이나 유지보수면에서도 문제가 발생하곤 한다.</p>

<p>따라서 검증된 Framework나 Library를 사용하는 것이 개인이 개발관리 하는것 보다 팀프로젝트나 유지보수측면에서 더 유리하다.</p>]]></content><author><name>Ino</name></author><category term="web" /><category term="web" /><category term="css" /><summary type="html"><![CDATA[CSS가 뭔데? CSS(Cascading Style Sheets)는 HTML이나 XML과 같은 구조화 된 문서(Document)를 화면, 종이 등에 어떻게 렌더링할 것인지를 정의하기 위한 언어이다. 즉, CSS는 HTML의 각 요소(Element)의 style(design, layout etc)을 정의하여 화면(Screen) 등에 어떻게 렌더링하면 되는지 브라우저에게 설명하기 위한 언어이다.]]></summary></entry><entry><title type="html">HTML에 대해서</title><link href="http://localhost:4000/web/2022/05/24/HTML5%EC%97%90-%EB%8C%80%ED%95%B4%EC%84%9C.html" rel="alternate" type="text/html" title="HTML에 대해서" /><published>2022-05-24T00:00:00+09:00</published><updated>2022-05-24T00:00:00+09:00</updated><id>http://localhost:4000/web/2022/05/24/HTML5%EC%97%90%20%EB%8C%80%ED%95%B4%EC%84%9C</id><content type="html" xml:base="http://localhost:4000/web/2022/05/24/HTML5%EC%97%90-%EB%8C%80%ED%95%B4%EC%84%9C.html"><![CDATA[<h2 id="1html-이-뭔데">1.HTML 이 뭔데?</h2>

<p>HTML (HyperText Markup Language)은 웹페이지를 기술하기 위한 마크업 언어이다. <br />
조금 더 자세히 말하면 웹페이지의 내용(content)과 구조(structure)을 담당하는 언어로써 HTML 태그를 통해 정보를 구조화하는 것이다.</p>

<p>좀 더 직관적으로 말하자면, 처음 웹개발을 시작하는 이들이라면 HTML CSS Javascript를 우선적으로 공부하게 되는데,</p>
<ul>
  <li>HTML은 웹페이지의 내용과 구조를 담당하고,</li>
  <li>CSS는 웹페이지의 디자인과 스타일을 담당하고,</li>
  <li>Javascript는 웹페이지에서의 동작(행동)들을 프로그래밍 하는 언어라고 생각하면 당장 공부를 시작하는데 지장은 없을 것이다.</li>
</ul>

<hr />

<h2 id="2html-그래서-어떻게-시작하는데">2.HTML, 그래서 어떻게 시작하는데?</h2>

<h4 id="visualstudiocodevscode-에서--를-치고-엔터를-눌러라">VisualStudioCode(VScode) 에서 <code class="language-plaintext highlighter-rouge">!</code> 를 치고 <code class="language-plaintext highlighter-rouge">엔터</code>를 눌러라.</h4>

<blockquote>
  <p><em>Vscode는 웹개발에 필요한 거의 모든 Extension(확장자)를 지원하므로 설치하는 것을 권장한다.</em></p>
</blockquote>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="nt">&lt;html</span> <span class="na">lang=</span><span class="s">"en"</span><span class="nt">&gt;</span>
<span class="nt">&lt;head&gt;</span>
  <span class="nt">&lt;meta</span> <span class="na">charset=</span><span class="s">"UTF-8"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;meta</span> <span class="na">http-equiv=</span><span class="s">"X-UA-Compatible"</span> <span class="na">content=</span><span class="s">"IE=edge"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">"viewport"</span> <span class="na">content=</span><span class="s">"width=device-width, initial-scale=1.0"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;title&gt;</span>Document<span class="nt">&lt;/title&gt;</span>
<span class="nt">&lt;/head&gt;</span>
<span class="nt">&lt;body&gt;</span>
  
<span class="nt">&lt;/body&gt;</span>
<span class="nt">&lt;/html&gt;</span>
</code></pre></div></div>

<p>놀랍게도 우리는 <code class="language-plaintext highlighter-rouge">!</code> 와 <code class="language-plaintext highlighter-rouge">엔터</code> 를 누른것 만으로도 벌써 웹페이지를 만들었다. <br />
모든 html 내용은 <code class="language-plaintext highlighter-rouge">&lt;html&gt; 과 &lt;/html&gt;</code> 사이에 들어가는데,<br />
<code class="language-plaintext highlighter-rouge">&lt;head&gt; ~ &lt;/head&gt;</code> 사이에는, 브라우저(사용자)에선 보여지지 않지만 메타데이터의 설정등이 위치하고
<code class="language-plaintext highlighter-rouge">&lt;body&gt; ~ &lt;/body&gt;</code> 사이에는, 웹브라우저에 출력되는 모든요소들이 들어가게 된다.</p>

<hr />

<h2 id="3html-기본문법">3.HTML 기본문법</h2>

<p>HTML 요소는 시작 태그(start tag)와 종료 태그(end tag) 그리고 태그 사이에 위치한 content로 구성된다.
HTML document는 요소(Element)들의 집합으로 이루어진다.</p>

<p>태그는 대문자와 소문자를 구분하진 않지만, W3C에서 HTML4의 태그를 소문자로 권장하기에 HTML5에서도 태그를 소문자로 <br />
쓰는 것이 일반적이다.</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="nt">&lt;html</span> <span class="na">lang=</span><span class="s">"en"</span><span class="nt">&gt;</span>
<span class="nt">&lt;head&gt;</span>
  <span class="nt">&lt;meta</span> <span class="na">charset=</span><span class="s">"UTF-8"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;meta</span> <span class="na">http-equiv=</span><span class="s">"X-UA-Compatible"</span> <span class="na">content=</span><span class="s">"IE=edge"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">"viewport"</span> <span class="na">content=</span><span class="s">"width=device-width, initial-scale=1.0"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;title&gt;</span>Document<span class="nt">&lt;/title&gt;</span>
<span class="nt">&lt;/head&gt;</span>
<span class="nt">&lt;body&gt;</span>
  <span class="nt">&lt;h1&gt;</span>안녕하세요<span class="nt">&lt;/h1&gt;</span>
  <span class="nt">&lt;p&gt;</span>HTML포스팅 입니다.<span class="nt">&lt;/p&gt;</span>
<span class="nt">&lt;/body&gt;</span>
<span class="nt">&lt;/html&gt;</span>
</code></pre></div></div>

<hr />
<p><img src="https://user-images.githubusercontent.com/95608811/169938038-2d49f93a-cca9-4f61-843c-44c977ad9f92.png" width="600px" /></p>

<hr />
<p>html 요소는 웹페이지를 구성하는 모든 요소들을 포함한다.   위 예제를 보면 html 요소는 body 요소를 포함하며 body 요소는 h1, p 요소를 포함한다. 이 중첩 관계(부자 관계)로 웹페이지의 구조(structure)를 표현한다.</p>

<p>이런 중첩 관계를 가독성 좋게 표시하기 위해 중첩 관계마다 들여쓰기(indent)를 한다.</p>

<p>간단한 기본 태그 몇가지만 더 언급하고</p>

<p><code class="language-plaintext highlighter-rouge">&lt;strong&gt; ~ &lt;/strong&gt;</code>: 글씨 굵게 <br />
<code class="language-plaintext highlighter-rouge">&lt;u&gt; ~ &lt;/u&gt;</code> : 밑줄 (underline) <br />
<code class="language-plaintext highlighter-rouge">&lt;h1&gt; ~ &lt;/h1&gt;</code> : 제목이랄까? h1~h6까지 있고, 1 부터 순차적으로 작아진다.<br />
<code class="language-plaintext highlighter-rouge">&lt;br&gt;</code> : 줄바꿈 태그, 엔터와 같은느낌인데, 닫힘태그가 필요없음 단순히 시각적인 기능.<br />
HTML에서는 열심히 엔터키로 줄바꿈 하려고 해도 안된다. 
줄바꿈이 필요하면 <code class="language-plaintext highlighter-rouge">&lt;br&gt;</code>를 사용하자 !</p>

<p>그럼 단순히 h태그는 p태그보다 size만 큰 글씨인가 ?<br />
다음 포스팅에서는 반드시 특정태그를 이용해서 HTML을 작성해야하는 이유를 간략히 포스팅하겠다.</p>]]></content><author><name>Ino</name></author><category term="web" /><category term="web" /><category term="html" /><summary type="html"><![CDATA[1.HTML 이 뭔데?]]></summary></entry><entry><title type="html">An exhibit of Markdown</title><link href="http://localhost:4000/markdown/2022/05/06/test-markdown.html" rel="alternate" type="text/html" title="An exhibit of Markdown" /><published>2022-05-06T00:00:00+09:00</published><updated>2022-05-06T00:00:00+09:00</updated><id>http://localhost:4000/markdown/2022/05/06/test-markdown</id><content type="html" xml:base="http://localhost:4000/markdown/2022/05/06/test-markdown.html"><![CDATA[<p>This note demonstrates some of what <a href="https://daringfireball.net/projects/markdown/">Markdown</a> is capable of doing.</p>

<h2 id="an-exhibit-of-markdown">An exhibit of Markdown</h2>

<p><em>Note: Feel free to play with this page. Unlike regular notes, this doesn’t automatically save itself.</em></p>

<h2 id="basic-formatting">Basic formatting</h2>

<p>Paragraphs can be written like so. A paragraph is the basic block of Markdown. A paragraph is what text will turn into when there is no reason it should become anything else.</p>

<p>Paragraphs must be separated by a blank line. Basic formatting of <em>italics</em> and <strong>bold</strong> is supported. This <em>can be <strong>nested</strong> like</em> so.</p>

<h2 id="lists">Lists</h2>

<h3 id="ordered-list">Ordered list</h3>

<ol>
  <li>Item 1</li>
  <li>A second item</li>
  <li>Number 3</li>
  <li>Ⅳ</li>
</ol>

<p><em>Note: the fourth item uses the Unicode character for <a href="https://www.fileformat.info/info/unicode/char/2163/index.htm">Roman numeral four</a>.</em></p>

<h3 id="unordered-list">Unordered list</h3>

<ul>
  <li>An item</li>
  <li>Another item</li>
  <li>Yet another item</li>
  <li>And there’s more…</li>
</ul>

<h2 id="paragraph-modifiers">Paragraph modifiers</h2>

<h3 id="code-block">Code block</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Code blocks are very useful for developers and other people who look at code or other things that are written in plain text. As you can see, it uses a fixed-width font.
</code></pre></div></div>

<p>You can also make <code class="language-plaintext highlighter-rouge">inline code</code> to add code into other things.</p>

<h3 id="quote">Quote</h3>

<blockquote>
  <p>Here is a quote. What this is should be self explanatory. Quotes are automatically indented when they are used.</p>
</blockquote>

<h2 id="headings">Headings</h2>

<p>There are six levels of headings. They correspond with the six levels of HTML headings. You’ve probably noticed them already in the page. Each level down uses one more hash character.</p>

<h3 id="headings-can-also-contain-formatting">Headings <em>can</em> also contain <strong>formatting</strong></h3>

<h3 id="they-can-even-contain-inline-code">They can even contain <code class="language-plaintext highlighter-rouge">inline code</code></h3>

<p>Of course, demonstrating what headings look like messes up the structure of the page.</p>

<p>I don’t recommend using more than three or four levels of headings here, because, when you’re smallest heading isn’t too small, and you’re largest heading isn’t too big, and you want each size up to look noticeably larger and more important, there there are only so many sizes that you can use.</p>

<h2 id="urls">URLs</h2>

<p>URLs can be made in a handful of ways:</p>

<ul>
  <li>A named link to <a href="https://www.markitdown.net/">MarkItDown</a>. The easiest way to do these is to select what you want to make a link and hit <code class="language-plaintext highlighter-rouge">Ctrl+L</code>.</li>
  <li>Another named link to <a href="https://www.markitdown.net/">MarkItDown</a></li>
  <li>Sometimes you just want a URL like <a href="https://www.markitdown.net/">https://www.markitdown.net/</a>.</li>
</ul>

<h2 id="horizontal-rule">Horizontal rule</h2>

<p>A horizontal rule is a line that goes across the middle of the page.</p>

<hr />

<p>It’s sometimes handy for breaking things up.</p>

<h2 id="images">Images</h2>

<p>Markdown can also contain images. I’ll need to add something here sometime.</p>

<h2 id="finally">Finally</h2>

<p>There’s actually a lot more to Markdown than this. See the official <a href="https://daringfireball.net/projects/markdown/basics">introduction</a> and <a href="https://daringfireball.net/projects/markdown/syntax">syntax</a> for more information. However, be aware that this is not using the official implementation, and this might work subtly differently in some of the little things.</p>]]></content><author><name>AlphateamInho</name></author><category term="markdown" /><category term="example" /><category term="markdown" /><summary type="html"><![CDATA[This note demonstrates some of what Markdown is capable of doing.]]></summary></entry></feed>