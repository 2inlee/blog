<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2022-08-12T17:24:14+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">시를 좋아하는 프로그래머</title><subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.</subtitle><author><name>AlphateamInho</name></author><entry><title type="html">C언어 포인터 동적메모리</title><link href="http://localhost:4000/c/2022/08/12/c%EC%96%B8%EC%96%B4%ED%8F%AC%EC%9D%B8%ED%84%B0.html" rel="alternate" type="text/html" title="C언어 포인터 동적메모리" /><published>2022-08-12T00:00:00+09:00</published><updated>2022-08-12T00:00:00+09:00</updated><id>http://localhost:4000/c/2022/08/12/c%EC%96%B8%EC%96%B4%ED%8F%AC%EC%9D%B8%ED%84%B0</id><content type="html" xml:base="http://localhost:4000/c/2022/08/12/c%EC%96%B8%EC%96%B4%ED%8F%AC%EC%9D%B8%ED%84%B0.html"><![CDATA[<h2 id="메모리-영역">메모리 영역</h2>

<ol>
  <li>
    <p>코드 영역  <br />
코드 영역은 이름 처럼 작성한 코드를 저장하는 영역입니다.​</p>
  </li>
  <li>
    <p>데이터 영역  <br />
데이터 영역은 전역 변수와 정적 변수를 저장하는 영역입니다.  <br />
전역 변수는 프로그램이 시작되면서 초기화됩니다. <br />
그러므로 데이터 영역은 프로그램 시작시에 이미 메모리가 확보되어 크기가 변하지 않음을 알 수 있습니다.</p>
  </li>
  <li>
    <p>힙 영역
힙영역은 동적 메모리를 할당하는 영역입니다. <br />
C언어로 코드를 작성할 때 직접 메모리를 할당할 때가 있습니다.  <br />
이 때 메모리를 할당하는 영역이 바로 힙 영역입니다.</p>
  </li>
  <li>
    <p>스택 영역  <br />
스택 영역은 지역 변수와 매개변수를 저장하는 영역입니다. <br />
지역 변수와 매개 변수 특성 상 해당 함수의 호출과 실행이 완료되면 사라집니다.  <br />
그러므로 데이터가 저장되었다가 지워지기를 반복하는 영역임을 알 수 있습니다.</p>
  </li>
</ol>

<hr />

<h2 id="메모리할당-함수-malloccallocrealloc">메모리할당 함수 (malloc,calloc,realloc)</h2>
<blockquote>
  <p>메모리 관련함수는 헤더파일 <code class="language-plaintext highlighter-rouge">&lt;stdlib.h&gt;</code> 또는 <code class="language-plaintext highlighter-rouge">&lt;malloc.h&gt;</code>에 있다.   <br />
실제값 : *(p + i) == p[i];    <br />
주소 : p + i == &amp;p[i];</p>
</blockquote>

<p><code class="language-plaintext highlighter-rouge">malloc</code> : 동적 메모리 함수</p>
<ul>
  <li>메모리를 미리 일정량 만큼 잡아두지 않고, 필요할때마다 동적으로 할당한다.</li>
  <li>필요할 때마다 동적으로 할당해서 메모리낭비를 줄여준다.</li>
  <li>형식 : 포인터변수 = (포인터변수의 데이터형 *)malloc(포인터변수의 데이터형 크기 * 필요한크기);</li>
</ul>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span><span class="cpf">&lt;stdlib.h&gt;</span><span class="cp">
</span><span class="kt">int</span> <span class="nf">main</span><span class="p">(){</span>
  <span class="kt">int</span> <span class="o">*</span><span class="n">p</span><span class="p">;</span>
  <span class="n">p</span> <span class="o">=</span> <span class="p">(</span><span class="kt">int</span> <span class="o">*</span><span class="p">)</span><span class="n">malloc</span><span class="p">(</span><span class="k">sizeof</span><span class="p">(</span><span class="kt">int</span><span class="p">)</span><span class="o">*</span><span class="mi">10</span><span class="p">);</span> <span class="c1">// int형은 4바이트니깐, 총 40바이트를 할당한 상태이다.</span>
  <span class="n">free</span><span class="p">(</span><span class="n">p</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>
<ul>
  <li>크기는 바이트형이고, malloc을 이용해 필요한만큼 동적할당을 해준다.</li>
  <li>사용후 free() 함수를 통해 할당된 공간을 반납해준다.</li>
</ul>

<hr />

<p><code class="language-plaintext highlighter-rouge">calloc</code> 함수</p>
<ul>
  <li>요청한 메모리공간을 0으로 초기화하여 할당함.</li>
  <li>형식 : 포인터변수 = (포인터변수의 데이터형 *)calloc(포인터변수의 데이터형 크기 * 필요한크기);</li>
  <li>malloc함수로 공간을 할당하면, 가비지값(쓰레기값)들이 들어가는데, calloc()함수를 이용해 할당하면,  <br />
원하는만큼 공간을 할당후 메모리공간도 0으로 초기화 해준다.</li>
</ul>

<hr />

<p><code class="language-plaintext highlighter-rouge">realloc</code> 함수</p>
<ul>
  <li>새로 동적메모리를 할당받고, 이전에 할당받은 메모리값을 복사하는 함수</li>
  <li>단독으로 사용이 불가능하며 이전에 malloc또는 calloc으로 할당받았던 경험이 있어야함.</li>
  <li>형식 : 포인터변수 = (포인터변수 *)realloc(기본포인터, 포인터변수의 데이터형 크기 * 필요한크기);</li>
</ul>

<div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span><span class="cpf">&lt;stdlib.h&gt;</span><span class="cp">
</span><span class="kt">int</span> <span class="nf">main</span><span class="p">(){</span>
  <span class="kt">int</span> <span class="o">*</span><span class="n">p</span><span class="p">;</span>
  <span class="n">p</span> <span class="o">=</span> <span class="p">(</span><span class="kt">int</span> <span class="o">*</span><span class="p">)</span><span class="n">malloc</span><span class="p">(</span><span class="k">sizeof</span><span class="p">(</span><span class="kt">int</span><span class="p">));</span>
  <span class="n">p</span> <span class="o">=</span> <span class="p">(</span><span class="kt">int</span> <span class="o">*</span><span class="p">)</span><span class="n">realloc</span><span class="p">(</span><span class="n">p</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="kt">int</span><span class="p">))</span> <span class="c1">// 이전라인에서의 p의값을 복사해서 넣는다.</span>
  <span class="n">free</span><span class="p">(</span><span class="n">p</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>]]></content><author><name>Ino</name></author><category term="c" /><category term="C" /><summary type="html"><![CDATA[메모리 영역]]></summary></entry><entry><title type="html">자릿수의합 for Python</title><link href="http://localhost:4000/algorithm/2022/08/07/%EC%9E%90%EB%A6%BF%EC%88%98%EC%9D%98%ED%95%A9.html" rel="alternate" type="text/html" title="자릿수의합 for Python" /><published>2022-08-07T00:00:00+09:00</published><updated>2022-08-07T00:00:00+09:00</updated><id>http://localhost:4000/algorithm/2022/08/07/%EC%9E%90%EB%A6%BF%EC%88%98%EC%9D%98%ED%95%A9</id><content type="html" xml:base="http://localhost:4000/algorithm/2022/08/07/%EC%9E%90%EB%A6%BF%EC%88%98%EC%9D%98%ED%95%A9.html"><![CDATA[<blockquote>
  <p>문제는 너무 자세하게 기술하지 않음
출처 : 인프런 - 파이썬 알고리즘 문제풀이 (코딩테스트 대비) by 김태원 강사님</p>
</blockquote>

<h2 id="문제">문제</h2>
<p>N개의 자연수가 입력되면 각 자연수의 자릿수의 합을 구하고, 그 합이 최대인 자연수를 출력 하는 프로그램을 작성하세요. 각 자연수의 자릿수의 합을 구하는 함수를 def digit_sum(x)를 꼭 작성해서 프로그래밍 하세요.</p>

<h4 id="입력">입력</h4>
<p>첫 줄에 자연수의 개수 N(3&lt;=N&lt;=100)이 주어지고, 그 다음 줄에 N개의 자연수가 주어진다. 각 자연수의 크기는 10,000,000를 넘지 않는다.</p>

<h4 id="출력">출력</h4>
<p>자릿수의 합이 최대인 자연수를 출력한다. 자릿수의 합이 같을 경우 입력순으로 먼저인 숫자 를 출력합니다.</p>

<pre><code class="language-Python">n = int(input('n을 입력하시오 : '))
a = list(map(int,input('n개 만큼 입력').split()))
max = -2147000000

def digit_sum(x):
  sum = 0
  while(x&gt;0):
    sum += x % 10
    x = x//10
  return sum


for x in a:
  total = digit_sum(x)
  if total &gt; max:
    max = total
    res = x

print(res)

</code></pre>]]></content><author><name>Ino</name></author><category term="algorithm" /><category term="Python" /><category term="algorithm" /><summary type="html"><![CDATA[문제는 너무 자세하게 기술하지 않음 출처 : 인프런 - 파이썬 알고리즘 문제풀이 (코딩테스트 대비) by 김태원 강사님]]></summary></entry><entry><title type="html">k번째 큰 수 for Python</title><link href="http://localhost:4000/algorithm/2022/08/07/k%EB%B2%88%EC%A7%B8%ED%81%B0%EC%88%98.html" rel="alternate" type="text/html" title="k번째 큰 수 for Python" /><published>2022-08-07T00:00:00+09:00</published><updated>2022-08-07T00:00:00+09:00</updated><id>http://localhost:4000/algorithm/2022/08/07/k%EB%B2%88%EC%A7%B8%ED%81%B0%EC%88%98</id><content type="html" xml:base="http://localhost:4000/algorithm/2022/08/07/k%EB%B2%88%EC%A7%B8%ED%81%B0%EC%88%98.html"><![CDATA[<blockquote>
  <p>문제는 너무 자세하게 기술하지 않음
출처 : 인프런 - 파이썬 알고리즘 문제풀이 (코딩테스트 대비) by 김태원 강사님</p>
</blockquote>

<h2 id="문제">문제</h2>
<p>현수는 1부터 100사이의 자연수가 적힌 N장의 카드를 가지고 있습니다. 같은 숫자의 카드가 여러장 있을 수 있습니다. 현수는 이 중 3장을 뽑아 각 카드에 적힌 수를 합한 값을 기록하려 고 합니다. 3장을 뽑을 수 있는 모든 경우를 기록합니다. 기록한 값 중 K번째로 큰 수를 출력 하는 프로그램을 작성하세요.
만약 큰 수부터 만들어진 수가 25 25 23 23 22 20 19……이고 K값이 3이라면 K번째 큰 값 은 22입니다.</p>

<h4 id="입력">입력</h4>
<p>첫 줄에 자연수 N(3&lt;=N&lt;=100)과 K(1&lt;=K&lt;=50) 입력되고, 그 다음 줄에 N개의 카드값이 입력 된다.</p>

<h4 id="출력">출력</h4>
<p>첫 줄에 K번째 수를 출력합니다. K번째 수는 반드시 존재합니다.</p>

<pre><code class="language-Python">n,k = map(int,input('n과 k를 입력하시오').split())
a = list(map(int, input().split()))
res = set() # 중복을 제거하는 set() 자료구조 list자료구조에서 중복을 제거하는것보다, 처음부터 set 쓰는게 나음
for i in range(n):
  for j in range(i+1, n): # i 뒤부터 반복문을 돌려서 서로 다른 수를 뽑게 하기 위해 설정
    for m in range(j+1, n): # m은 j 뒤부터 반복문을 돌림 -&gt; 서로 다른 수
      res.add(a[i] + a[j] + a[m]) # list자료형은 append 함수를 쓰지만 set자료형은 add함수를 씀
res = list(res)
res.sort(reverse=True) # sort에 파라미터값을 안주면, 오름차순이라 내림차순 정렬하기위헤 reverse 인자를줌
print(res[k-1])
</code></pre>]]></content><author><name>Ino</name></author><category term="algorithm" /><category term="Python" /><category term="algorithm" /><summary type="html"><![CDATA[문제는 너무 자세하게 기술하지 않음 출처 : 인프런 - 파이썬 알고리즘 문제풀이 (코딩테스트 대비) by 김태원 강사님]]></summary></entry><entry><title type="html">정다면체 for Python</title><link href="http://localhost:4000/algorithm/2022/08/07/%EC%A0%95%EB%8B%A4%EB%A9%B4%EC%B2%B4.html" rel="alternate" type="text/html" title="정다면체 for Python" /><published>2022-08-07T00:00:00+09:00</published><updated>2022-08-07T00:00:00+09:00</updated><id>http://localhost:4000/algorithm/2022/08/07/%EC%A0%95%EB%8B%A4%EB%A9%B4%EC%B2%B4</id><content type="html" xml:base="http://localhost:4000/algorithm/2022/08/07/%EC%A0%95%EB%8B%A4%EB%A9%B4%EC%B2%B4.html"><![CDATA[<blockquote>
  <p>문제는 너무 자세하게 기술하지 않음
출처 : 인프런 - 파이썬 알고리즘 문제풀이 (코딩테스트 대비) by 김태원 강사님</p>
</blockquote>

<h2 id="문제">문제</h2>
<p>두 개의 정 N면체와 정 M면체의 두 개의 주사위를 던져서 나올 수 있는 눈의 합 중 가장 확 률이 높은 숫자를 출력하는 프로그램을 작성하세요.
정답이 여러 개일 경우 오름차순으로 출력합니다.</p>

<h4 id="입력">입력</h4>
<p>첫 번째 줄에는 자연수 N과 M이 주어집니다. N과 M은 4, 6, 8, 12, 20 중의 하나입니다.</p>

<h4 id="출력">출력</h4>
<p>첫 번째 줄에 답을 출력합니다.</p>

<pre><code class="language-Python">n ,m= map(int,input('n과 m을 입력하시오').split())
cnt=[0]*(n+m+3)
max=0
for i in range(1, n+1):
  for j in range(1, m+1):
    cnt[i+j]=cnt[i+j]+1

for i in range(n+m+1):
  if cnt[i]&gt;max:
    max=cnt[i]

for i in range(n+m+1):
  if cnt[i]==max:
    print(i, end=' ')

</code></pre>

<h4 id="설명">설명</h4>
<p>n+m+3 의 갯수만큼 cnt의 리스트를 만들어서 0으로 초기화 시켜준다.</p>]]></content><author><name>Ino</name></author><category term="algorithm" /><category term="Python" /><category term="algorithm" /><summary type="html"><![CDATA[문제는 너무 자세하게 기술하지 않음 출처 : 인프런 - 파이썬 알고리즘 문제풀이 (코딩테스트 대비) by 김태원 강사님]]></summary></entry><entry><title type="html">대표값 for Python</title><link href="http://localhost:4000/algorithm/2022/07/30/%EB%8C%80%ED%91%9C%EA%B0%92.html" rel="alternate" type="text/html" title="대표값 for Python" /><published>2022-07-30T00:00:00+09:00</published><updated>2022-07-30T00:00:00+09:00</updated><id>http://localhost:4000/algorithm/2022/07/30/%EB%8C%80%ED%91%9C%EA%B0%92</id><content type="html" xml:base="http://localhost:4000/algorithm/2022/07/30/%EB%8C%80%ED%91%9C%EA%B0%92.html"><![CDATA[<blockquote>
  <p>문제는 너무 자세하게 기술하지 않음
출처 : 인프런 - 파이썬 알고리즘 문제풀이 (코딩테스트 대비) by 김태원 강사님</p>
</blockquote>

<h2 id="문제">문제</h2>
<p>N명의 학생의 수학점수가 주어집니다. N명의 학생들의 평균(소수 첫째자리 반올림)을 구하고,     N명의 학생 중 평균에 가장 가까운 학생은 몇 번째 학생인지 출력하는 프로그램을 작성하세요.</p>

<h4 id="입력">입력</h4>
<p>첫줄에 자연수 N(5&lt;=N&lt;=100)이 주어지고, 두 번째 줄에는 각 학생의 수학점수인 N개의 자연 수가 주어집니다.    학생의 번호는 앞에서부터 1로 시작해서 N까지이다.</p>

<h4 id="출력">출력</h4>
<p>첫줄에 평균과 평균에 가장 가까운 학생의 번호를 출력한다.  <br />
평균은 소수 첫째 자리에서 반올림합니다.</p>

<pre><code class="language-Python">n = int(input("n을 입력하시오 : "))
a = list(map(int, input().split()))
min = 2147000000 # int 형의 가장 큰 값을 최솟값에 넣어서 이후 진행되는 if 비교문에서 항상 참이되게 설정함
ave = round(sum(a)/n) # round 는 소수첫째자리에서 반올림함 sum함수는 a리스트에 있는 모든값을 다 더함
for index,x in enumerate(a): # index값이 0부터 시작하는 index고, x가 a list에 있는 값들이 하나씩 들어간다.
  tmp = abs(x - ave)
  if tmp &lt; min:
    min = tmp
    score = x
    res = index+1 # index는 0부터 시작이기때문에 학생이 몇번째인지 알려면 +1을 해주어야함
  elif tmp == min:
    if x &gt; score:
      score = x
      res =index+1

print(ave, res)


</code></pre>

<h4 id="설명">설명</h4>
<p>n명의 학생의 평균을 구하고, 그 학생이 배열에서 몇 번째에 위치되어있는지만 찾으면 되는 문제다. <br />
평균을 나타내는 ave변수를 round랑 sum 내장함수를 이용해서
<code class="language-plaintext highlighter-rouge">sum : 리스트에 있는 원소의 합을 반환해준다.</code>
<code class="language-plaintext highlighter-rouge">round : round(실수,n) 이런식으로 쓰면 첫번째 인자를 n번째 소수점에서 반올림한다. (음수를 파라미터로 넣으면 소수점이 아닌 정수에서도 해당위치에서 반올림할 수 있다.) 단, 두번째 파라미터값을 안넣으면 디폴트값으로 소숫점 첫째자리에서 반올림한다.</code> <br />
평균을 구하고, a의 index값과 밸류값을 함께 enumerate를 이용해서 반복문을 돌린다.  <br />
<code class="language-plaintext highlighter-rouge">enumerate는 "열거하다"라는 뜻이다. 이 함수는 순서가 있는 자료형(리스트, 튜플, 문자열)을 입력으로 받아 인덱스 값을 포함하는 enumerate 객체를 돌려준다.</code>
tmp에는 각각의 학생들 평균인 x값에서 평균을 뺀 값을 절댓값으로 만들어서 넣는다.  <br />
tmp가 기존 min 보다 작으면, 해당tmp으로 min을 대체한다. <br />
그렇게 min을 대체하게 된 성적점수와 index를 각각의 변수에 넣는다.</p>]]></content><author><name>Ino</name></author><category term="algorithm" /><category term="Python" /><category term="algorithm" /><summary type="html"><![CDATA[문제는 너무 자세하게 기술하지 않음 출처 : 인프런 - 파이썬 알고리즘 문제풀이 (코딩테스트 대비) by 김태원 강사님]]></summary></entry><entry><title type="html">k번째수 for Python (feat.sort() vs sorted())</title><link href="http://localhost:4000/algorithm/2022/07/30/K%EB%B2%88%EC%A7%B8%EC%88%98.html" rel="alternate" type="text/html" title="k번째수 for Python (feat.sort() vs sorted())" /><published>2022-07-30T00:00:00+09:00</published><updated>2022-07-30T00:00:00+09:00</updated><id>http://localhost:4000/algorithm/2022/07/30/K%EB%B2%88%EC%A7%B8%EC%88%98</id><content type="html" xml:base="http://localhost:4000/algorithm/2022/07/30/K%EB%B2%88%EC%A7%B8%EC%88%98.html"><![CDATA[<blockquote>
  <p>문제는 너무 자세하게 기술하지 않음
출처 : 인프런 - 파이썬 알고리즘 문제풀이 (코딩테스트 대비) by 김태원 강사님</p>
</blockquote>

<h2 id="문제">문제</h2>
<p>N개의 숫자로 이루어진 숫자열이 주어지면 해당 숫자열중에서 s번째부터 e번째 까지의 수를 오름 차순 정렬했을 때 k번째로 나타나는 숫자를 출력하는 프로그램을 작성하세요.</p>

<h4 id="입력">입력</h4>
<p>첫 번째 줄에 테스트 케이스 T(1&lt;=T&lt;=10)이 주어집니다.
각 케이스별
첫 번째 줄은 자연수 N(5&lt;=N&lt;=500), s, e, k가 차례로 주어진다. 두 번째 줄에 N개의 숫자가 차례로 주어진다.</p>

<h4 id="출력">출력</h4>
<p>각 케이스별 k번째 수를 아래 출력예제와 같이 출력하세요.</p>

<pre><code class="language-Python">t = int(input())
for i in range(t): # t의 수만큼 반복한다.
  n,s,e,k = map(int,input().split())
  a = list(map(int, input().split())) # 띄어쓰기로 구분된 입력을 리스트형으로 a에 저장한다.
  b = a[s-1:e] # a의 s번째에서 e까지 슬라이싱 한 부분을 b에 저장한다.
  b = sorted(b) # b를 sorted 함수를 통해 오름차순 정렬한다.
  print(b[k-1]) # b의 k번째 리스트를 출력한다.
</code></pre>

<h4 id="설명">설명</h4>
<p>첫줄에 test case인 t를 int형으로 입력받는다.  <br />
두번째줄에 n,s,e,k 를 띄워쓰기로 구분하여 각각 입력받는다.  <br />
세번째줄에 a를 띄어쓰기로 구분하여 list로 입력받는다. <br />
b를 a[s-1:e] 슬라이싱해서 a의 s번째부터 e번째까지 슬라이싱하여 넣는다.  <br />
b를 sorted() 함수를 써서 오름차순 정렬한다.</p>

<h4 id="sort함수와-sorted-함수에-대해-추가설명">sort함수와 sorted 함수에 대해 추가설명</h4>
<p>sort() 리스트함수는 새로운 정렬된리스트로 바꿔버린다. <br />
sorted() 내장함수는 리스트를 정렬시킨값을 반환시킨다.</p>

<p>그러므로 리스트 자체를 바꾸고싶은게 아니라면 sorted 함수를 써서 반환된 값을 변수에 담아서 사용하는것이 바람직하다.</p>

<p>또한 sort함수는 리스트에서만 사용가능하지만, sorted 함수는 딕셔너리,튜플,문자열과 같은 형태에서도 범용적으로 사용할 수 있다.</p>

<p>마지막으로 내림차순 정렬할땐 sort와 sorted 모두 파라미터로 reverse 매개변수를 받는데,   <br />
b = sorted(a,reverse=True)  <br />
a.sort(reverse=True)</p>]]></content><author><name>Ino</name></author><category term="algorithm" /><category term="Python" /><category term="algorithm" /><summary type="html"><![CDATA[문제는 너무 자세하게 기술하지 않음 출처 : 인프런 - 파이썬 알고리즘 문제풀이 (코딩테스트 대비) by 김태원 강사님]]></summary></entry><entry><title type="html">k번째약수 for Python</title><link href="http://localhost:4000/algorithm/2022/07/30/K%EB%B2%88%EC%A7%B8%EC%95%BD%EC%88%98.html" rel="alternate" type="text/html" title="k번째약수 for Python" /><published>2022-07-30T00:00:00+09:00</published><updated>2022-07-30T00:00:00+09:00</updated><id>http://localhost:4000/algorithm/2022/07/30/K%EB%B2%88%EC%A7%B8%EC%95%BD%EC%88%98</id><content type="html" xml:base="http://localhost:4000/algorithm/2022/07/30/K%EB%B2%88%EC%A7%B8%EC%95%BD%EC%88%98.html"><![CDATA[<blockquote>
  <p>문제는 너무 자세하게 기술하지 않음
출처 : 인프런 - 파이썬 알고리즘 문제풀이 (코딩테스트 대비) by 김태원 강사님</p>
</blockquote>

<h2 id="문제">문제</h2>
<p>두 개의 자연수 N과 K가 주어졌을 때, N의 약수들 중 K번째로 작은 수를 출력하는 프로그램을 작성하시오.</p>

<h4 id="입력">입력</h4>
<p>첫째 줄에 N과 K가 빈칸을 사이에 두고 주어진다. N은 1 이상 10,000 이하이다. K는 1 이상 N 이하이다.</p>

<h4 id="출력">출력</h4>
<p>첫째 줄에 N의 약수들 중 K번째로 작은 수를 출력한다. 만일 N의 약수의 개수가 K개보다 적어서 K번째 약수가 존재하지 않을 경우에는 -1을 출력하시오.</p>

<pre><code class="language-Python">N,K = map(int, input().split()) # 이런식의 입력은 그냥 외워서 써야한다.
# 잘 이해가 안되면, 각 내장함수의 인자를 확인해야 한다.
# N과 K를 각각 input 한번에 받을건데, split함수를 이용해서 띄워쓰기로 구분해서 넣어주고 int형태로 바꿔준다.
print("단, N은 1이상 10000이하, K는 1이상 N 이하")
cnt = 0                # 약수의 개수를 출력할 count(cnt)를 0으로 초기화 해준다.
for i in range(1,N+1): # i를 1부터 N까지 반복한다.
  if N % i == 0:       # 만약 N이 i로 나누어 떨어지면, i가 N의 약수이므로
    cnt+=1             # cnt변수를 1 더한다.
  if cnt == K:         # 만약 cnt가 K면,
    print(i)           # i를 출력하고,
    break              # for문을 break 한다.
else:                  # 파이썬엔 for-else 문이 있다. for문을 다 돌아았는데
# 중간에 break 가 안되면, else문을 실행시킨다. 
# (for문을 다 돌았는데 break 가 안되면, 약수가 존재하지 않는다.)
  print(-1)
</code></pre>

<h4 id="설명">설명</h4>
<p>n과 k를 각각 입력받아서 변수에 저장하고, N을 i로 나눠서 나누어 떨어지면 약수이므로, <br />
cnt를 하나씩 더해가면서 반복문을 돌린다.  <br />
그렇게 cnt가 K가 되면 i가 K번째로 작은수 이므로 i를 출력하고 break 한다.</p>

<p>반복문을 N번 돌릴때 까지 break가 발생하지 않고 정상적으로 반복문이 끝나면,  <br />
for - else문에서 else 구문을 실행한다.</p>

<p>print(-1) 을 출력하고 프로그램이 종료된다.</p>]]></content><author><name>Ino</name></author><category term="algorithm" /><category term="Python" /><category term="algorithm" /><summary type="html"><![CDATA[문제는 너무 자세하게 기술하지 않음 출처 : 인프런 - 파이썬 알고리즘 문제풀이 (코딩테스트 대비) by 김태원 강사님]]></summary></entry><entry><title type="html">권한의 이해와 설정</title><link href="http://localhost:4000/system/2022/07/13/permission.html" rel="alternate" type="text/html" title="권한의 이해와 설정" /><published>2022-07-13T00:00:00+09:00</published><updated>2022-07-13T00:00:00+09:00</updated><id>http://localhost:4000/system/2022/07/13/permission</id><content type="html" xml:base="http://localhost:4000/system/2022/07/13/permission.html"><![CDATA[<h2 id="권한이란">권한이란?</h2>
<p>리눅스의 모든 파일과 디렉토리는 권한(permission)을 가지고 있다.       <br />
리눅스의 파일시스템 상에 권한에 대한 정보를 저장하는 부분이 있다.       <br />
퍼미션들은 시스템 상에 존재하는 파일들에 대한 읽기,쓰기,실행에 대한 접근 여부를 결정한다.       <br />
ls -l 명령어로 확인 가능 (첫번째 필드, -rwxr-wr–)      <br />
이러한 퍼미션은 다중 사용자 환경을 제공하는 리눅스 환경에서는 가장 기초적인 접근 통제 방법</p>

<p><img src="https://user-images.githubusercontent.com/95608811/178721039-e1d58298-5f8b-4631-9855-2d9f8a9ab85e.png" width="800px" /></p>

<h3 id="권한-설정-방법">권한 설정 방법</h3>
<ul>
  <li><code class="language-plaintext highlighter-rouge">chmod [권한] [파일 또는 디렉토리 이름]</code></li>
  <li><code class="language-plaintext highlighter-rouge">[권한]</code> : 권한을 입력할 때는 심볼릭 모드와 옥텟(8진수) 모드 2가지 방식을 이용하여 입력 가능하다.</li>
  <li><code class="language-plaintext highlighter-rouge">[파일 또는 디렉토리 이름]</code> : 파일, 디렉토리를 지정할 때는 절대 경로 또는 상대 경로 모두 가능하다.</li>
</ul>

<h4 id="간단한-문자로-설정하는-심볼릭-모드">간단한 문자로 설정하는 심볼릭 모드</h4>

<p><img src="https://user-images.githubusercontent.com/95608811/178722799-93b80ea6-da07-454b-8348-6bc80a13dce4.png" width="800px" /></p>

<h4 id="07까지의-숫자를-이용하는-옥텟-모드">0~7까지의 숫자를 이용하는 옥텟 모드</h4>
<p><img src="https://user-images.githubusercontent.com/95608811/178723045-a3e07723-7860-4028-aec4-bf861bea8b42.png" width="800px" /></p>

<blockquote>
  <p>읽기 쓰기 실행 순서로 각각 4,2,1 이고, 읽기와 쓰기만 있으면 4+2인 6 쓰기와 실행만 있으면 2+1 인 3
이런식으로 옥텟모드를 사용한다.</p>
</blockquote>

<h3 id="파일-또는-디렉토리를-생성할-때-권한값을-결정하는-umask">파일 또는 디렉토리를 생성할 때 권한값을 결정하는 umask</h3>
<p><img src="https://user-images.githubusercontent.com/95608811/178723739-7380eb92-d892-49e7-b496-f97123799e5d.png" width="800px" /></p>

<ul>
  <li>umask 값은 리눅스를 처음 설치할때 022이 기본값으로 세팅되어 있는데, directory는 777, file은 666이
기본 값이라 각자의 권한값에서 umask 값을 뺀(and 연산) 한 값이 각자의 권한값 (옥텟)이 된다.</li>
</ul>]]></content><author><name>Ino</name></author><category term="System" /><category term="linux" /><summary type="html"><![CDATA[권한이란? 리눅스의 모든 파일과 디렉토리는 권한(permission)을 가지고 있다. 리눅스의 파일시스템 상에 권한에 대한 정보를 저장하는 부분이 있다. 퍼미션들은 시스템 상에 존재하는 파일들에 대한 읽기,쓰기,실행에 대한 접근 여부를 결정한다. ls -l 명령어로 확인 가능 (첫번째 필드, -rwxr-wr–) 이러한 퍼미션은 다중 사용자 환경을 제공하는 리눅스 환경에서는 가장 기초적인 접근 통제 방법]]></summary></entry><entry><title type="html">파일 및 디렉토리 검색 - grep/find</title><link href="http://localhost:4000/system/2022/07/13/grep.html" rel="alternate" type="text/html" title="파일 및 디렉토리 검색 - grep/find" /><published>2022-07-13T00:00:00+09:00</published><updated>2022-07-13T00:00:00+09:00</updated><id>http://localhost:4000/system/2022/07/13/grep</id><content type="html" xml:base="http://localhost:4000/system/2022/07/13/grep.html"><![CDATA[<h2 id="파일-내용에서-검색-grep">파일 내용에서 검색 grep</h2>
<ul>
  <li>파일 내용에서 특정 내용만 찾을때 사용</li>
  <li>grep [옵션] [패턴] [파일이름]</li>
  <li>[옵션] : 좀 더 디테일한 조건으로 찾을 때 사용</li>
  <li>[패턴] : 찾고 싶은 내용을 입력, 일치하는 내용을 출력. 정규표현식 사용 가능</li>
  <li>[파일 이름] : grep 명령어로 특정 내용을 검색할 파일을 지정한다.     <br />
<code class="language-plaintext highlighter-rouge">ex ) grep -i root/ect/id</code></li>
</ul>

<h3 id="옵션">옵션</h3>

<p><code class="language-plaintext highlighter-rouge">-i</code> : 대소문자 무시 (word와 WoRD 를 구분하지 않는다.)  <br />
<code class="language-plaintext highlighter-rouge">-n</code> : 줄 번호 표시 (line 넘버를 표시한다.) <br />
<code class="language-plaintext highlighter-rouge">-v</code> : 패턴을 제외한 내용만 출력  <br />
<code class="language-plaintext highlighter-rouge">-w</code> : 단어 단위로 검색 (ro 를 검색하면 root 는 찾지않는다.)  <br />
<code class="language-plaintext highlighter-rouge">-c</code> : 매칭되는 줄 수 표시  <br />
<code class="language-plaintext highlighter-rouge">-ㅣ</code> : 매칭되는 패턴이 있는 파일 이름 출력</p>

<h3 id="패턴">패턴</h3>
<p>정규표현식 : 어떤 문자를 표현할 때 다양한 특수문자를 이용해 표현하는 방식     <br />
<code class="language-plaintext highlighter-rouge">^</code> : 줄의 시작을 지정 (해당 패턴이 줄의 시작인 경우 캡쳐) <code class="language-plaintext highlighter-rouge">ex)^root</code> <br />
<code class="language-plaintext highlighter-rouge">$</code> : 줄의 마지막 지정  <code class="language-plaintext highlighter-rouge">ex)root$</code>  <br />
<code class="language-plaintext highlighter-rouge">.</code> : 한 문자 대치 <code class="language-plaintext highlighter-rouge">ex)r..t</code>  <br />
<code class="language-plaintext highlighter-rouge">*</code> : 여러 문제 대치 <code class="language-plaintext highlighter-rouge">ex)r*</code>  <br />
<code class="language-plaintext highlighter-rouge">[]</code> : 패턴 중 한 문자 일치 <code class="language-plaintext highlighter-rouge">ex)[rR]oot</code> <br />
<code class="language-plaintext highlighter-rouge">[^]</code> : 패턴 중 제외할 문자 지정 <code class="language-plaintext highlighter-rouge">ex)[^T]oot :: T를 제외한 oot 부분 출력</code></p>

<h3 id="특수문자들을-단순한-문자로만-인식-fgrep">특수문자들을 단순한 문자로만 인식 fgrep</h3>
<p><code class="language-plaintext highlighter-rouge">fgrep [옵션] [패턴] [파일이름]</code>  <br />
만약 문서에 특수문자가 포함된 경우 여러 특수문자들은 정규표현식으로 인식되기 때문에   <br />
해당 정규표현식의 기능으로 검색이 될 수 있다.   <br />
이런 경우 fgrep은 여러 특수문자들(*,$,. 등)을 단순한 문자로 인식해서
문서 내에서 해당 특수문자를 찾을 때 사용할 수 있다.</p>

<h2 id="디렉토리-내에서-검색-명령어-find">디렉토리 내에서 검색 명령어 find</h2>
<p><code class="language-plaintext highlighter-rouge">find [경로] [조건] [아규먼트] [행동]</code>  <br />
<code class="language-plaintext highlighter-rouge">[경로]</code> : 어디를 기준으로 검색할 것인지 입력한다.  하위 디렉토리까지 검색  <br />
<code class="language-plaintext highlighter-rouge">[조건]</code> : 어떤 조건으로 검색할 것인지 입력한다.  <br />
<code class="language-plaintext highlighter-rouge">[아규먼트]</code> : 조건에 맞는 값을 입력해준다.   <br />
<code class="language-plaintext highlighter-rouge">[행동]</code> : 검색 결과를 어떻게 처리할 것인지 입력한다.   <br />
<code class="language-plaintext highlighter-rouge">ex) find /-name file -exec rm -rf {}￦;</code> <br />
만약 행동은 빈칸으로 처리한다면 print 가 default로 입력된다.</p>

<h3 id="조건">조건</h3>
<p><code class="language-plaintext highlighter-rouge">name</code> : 이름으로 검색
<code class="language-plaintext highlighter-rouge">type</code> : 파일의 타입으로 검색, 디렉토리는 d,파일은 f  <br />
<code class="language-plaintext highlighter-rouge">perm</code> : 권한으로 검색  <br />
<code class="language-plaintext highlighter-rouge">user</code> : 소유자로 검색  <br />
<code class="language-plaintext highlighter-rouge">size</code> : 파일 크기로 검색, +는 이상, -는 이하, 단위는 512바이트   <br />
c 바이트, k 키로바이트, M 메가바이트, G 기가바이트    <br />
<code class="language-plaintext highlighter-rouge">atime</code> : 파일의 마지막 접근 시간으로 검색  <br />
<code class="language-plaintext highlighter-rouge">mtime</code> : 파일의 마지막 수정 시간으로 검색</p>

<h3 id="행동">행동</h3>
<p><code class="language-plaintext highlighter-rouge">ls</code> : 자세한 결과 출력 <br />
<code class="language-plaintext highlighter-rouge">exec [명령어] {} ￦;</code> : 검색한 파일을 특정 명령어로 실행  <br />
<code class="language-plaintext highlighter-rouge">ex ) -exec rm -rf {} ￦;</code> 제거하기</p>]]></content><author><name>Ino</name></author><category term="System" /><category term="linux" /><summary type="html"><![CDATA[파일 내용에서 검색 grep 파일 내용에서 특정 내용만 찾을때 사용 grep [옵션] [패턴] [파일이름] [옵션] : 좀 더 디테일한 조건으로 찾을 때 사용 [패턴] : 찾고 싶은 내용을 입력, 일치하는 내용을 출력. 정규표현식 사용 가능 [파일 이름] : grep 명령어로 특정 내용을 검색할 파일을 지정한다. ex ) grep -i root/ect/id]]></summary></entry><entry><title type="html">하드링크와 심볼릭 링크</title><link href="http://localhost:4000/system/2022/07/13/hardlink.html" rel="alternate" type="text/html" title="하드링크와 심볼릭 링크" /><published>2022-07-13T00:00:00+09:00</published><updated>2022-07-13T00:00:00+09:00</updated><id>http://localhost:4000/system/2022/07/13/hardlink</id><content type="html" xml:base="http://localhost:4000/system/2022/07/13/hardlink.html"><![CDATA[<h2 id="링크란-무엇인가">링크란 무엇인가?</h2>
<ul>
  <li>특정 파일 또는 디렉토리에 접근을 쉽게 할 수 있도록 하는 방법</li>
  <li>파일 시스템이 물리적인 장치인 하드 디스크 상에 저장되어 있는 특정 파일의 위치를 가리키는 것</li>
</ul>

<h3 id="하드링크">하드링크</h3>
<ul>
  <li>특정 파일 또는 디렉토리에 접근을 쉽게 할 수 있도록 하는 방법</li>
  <li>파일 시스템이 물리적인 장치인 하드 디스크 상에 저장되어 있는 특정 파일의 위치를 가리키는 것</li>
</ul>

<h3 id="심볼릭링크">심볼릭링크</h3>
<ul>
  <li>윈도우의 바로가기 개념과 슷하며 실질적인 디스크 상의 파일을 가리키는 것이 아니라 파일 시스템 상의 특정 파일을 가리키는 것</li>
</ul>

<h3 id="링크-생성-명령어">링크 생성 명령어</h3>
<ul>
  <li><code class="language-plaintext highlighter-rouge">ln [옵션] [원본] [링크]</code></li>
  <li>옵션을 지정하지 않고 링크 파일을 생성하면 하드 링크를 생성할 수 있다.</li>
  <li>옵션으로 -s 를 지정하고 링크 파일을 생성하면 심볼릭 링크를 생성할 수 있다.</li>
</ul>]]></content><author><name>Ino</name></author><category term="System" /><category term="linux" /><summary type="html"><![CDATA[링크란 무엇인가? 특정 파일 또는 디렉토리에 접근을 쉽게 할 수 있도록 하는 방법 파일 시스템이 물리적인 장치인 하드 디스크 상에 저장되어 있는 특정 파일의 위치를 가리키는 것]]></summary></entry></feed>